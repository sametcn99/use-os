// Import createSlice from Redux Toolkit for creating a slice of the Redux store
import { createSlice } from "@reduxjs/toolkit";

// Define the type for the state
interface terminalState {
  value: boolean;
  commands: [any];
}

// Create a slice using createSlice
const terminalSlice = createSlice({
  name: "terminal", // Name of the slice, used as the key in the root reducer
  initialState: { value: false, commands: [] as any[] } as terminalState, // Initial state for this slice
  reducers: {
    setTerminalOpen: (state) => {
      // Toggle the boolean value when setOpen is dispatched
      state.value = !state.value;
      console.log(`Terminal open state is set ${state.value}`);
    },
    addCommand: (state, action) => {
      state.commands.push(action.payload); // Assuming you want to add the payload to the commands array
    },
  },
});

// Export the increment and decrement action creators for dispatching the corresponding actions
export const { setTerminalOpen, addCommand } = terminalSlice.actions;

// Export the reducer function generated by createSlice as the default export of this module
const terminalReducer = terminalSlice.reducer;
export default terminalReducer;
